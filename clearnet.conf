#include "clearnet/auto_med.conf";

define BOGON_ASNS = [
    0,                      # RFC 7607
    23456,                  # RFC 4893 AS_TRANS
    64496..64511,           # RFC 5398 and documentation/example ASNs
    64512..65534,           # RFC 6996 Private ASNs
    65535,                  # RFC 7300 Last 16 bit ASN
    65536..65551,           # RFC 5398 and documentation/example ASNs
    65552..131071,          # RFC IANA reserved ASNs
    4200000000..4294967294, # RFC 6996 Private ASNs
    4294967295              # RFC 7300 Last 32 bit ASN
];

define BOGON_PREFIXES_V4 = [
    0.0.0.0/8+,             # RFC 1122 'this' network
    10.0.0.0/8+,            # RFC 1918 private space
    100.64.0.0/10+,         # RFC 6598 Carrier grade nat space
    127.0.0.0/8+,           # RFC 1122 localhost
    169.254.0.0/16+,        # RFC 3927 link local
    172.16.0.0/12+,         # RFC 1918 private space
    192.0.2.0/24+,          # RFC 5737 TEST-NET-1
    192.88.99.0/24+,        # RFC 7526 deprecated 6to4 relay anycast. If you wish to allow this, change `24+` to `24{25,32}`(no more specific)
    194.168.0.0/16+,        # RFC 1918 private space
    198.18.0.0/15+,         # RFC 2544 benchmarking
    198.51.100.0/24+,       # RFC 5737 TEST-NET-2
    203.0.113.0/24+,        # RFC 5737 TEST-NET-3
    224.0.0.0/4+,           # multicast
    240.0.0.0/4+            # reserved
];

define BOGON_PREFIXES_V6 = [
    ::/8+,                  # RFC 4291 IPv4-compatible, loopback, et al
    0100::/64+,             # RFC 6666 Discard-Only
    2001::/32{33,128},      # RFC 4380 Teredo, no more specific
    2001:2::/48+,           # RFC 5180 BMWG
    2001:10::/28+,          # RFC 4843 ORCHID
    2001:db8::/32+,         # RFC 3849 documentation
    2002::/16+,             # RFC 7526 deprecated 6to4 relay anycast. If you wish to allow this, change `16+` to `16{17,128}`(no more specific)
    3ffe::/16+,             # RFC 3701 old 6bone
    fc00::/7+,              # RFC 4193 unique local unicast
    fe80::/10+,             # RFC 4291 link local unicast
    fec0::/10+,             # RFC 3879 old site local unicast
    ff00::/8+               # RFC 4291 multicast
];

function INVALID_NET() {
  case net.type {
      NET_IP4: return net ~ BOGON_PREFIXES_V4;
      NET_IP6: return net ~ BOGON_PREFIXES_V6;
  }
}

function INVALID_ASN() {
  if bgp_path ~ BOGON_ASNS then return true;
  return false;
}

function TOO_SMALL_NET(){
  case net.type {
    NET_IP4: return net.len > 24;
    NET_IP6: return net.len > 48;
  }
}

function NET_TRANSIT_UPSTREAM_IMPORT_FILTER(pair set allow_communities) {
    include "/etc/bird/clearnet/custom_transit_import_filter*.conf";
    if !RPKI_INVALID() && !INVALID_NET() && !INVALID_ASN() && !TOO_SMALL_NET() && !NET_SELF_NET_CHECK() && net != ::/0 then {
      if bgp_community ~ allow_communities then {
        bgp_local_pref = 1000;
        bgp_large_community.add((NET_AS, 1000, bgp_path.last));
        bgp_large_community.add((NET_AS, 210, PRIV_AS));
      } else {
        bgp_local_pref = 500;
        bgp_large_community.add((NET_AS, 500, bgp_path.last));
        bgp_large_community.add((NET_AS, 200, PRIV_AS));
      }
      accept;
    } else reject;
}

filter NET_IX_UPSTREAM_IMPORT_FILTER {
    include "/etc/bird/clearnet/custom_ix_import_filter*.conf";
    if !RPKI_INVALID() && !INVALID_NET() && !INVALID_ASN() && !TOO_SMALL_NET() && !NET_SELF_NET_CHECK() && net != ::/0 then {
      bgp_local_pref = 1000; bgp_large_community.add((NET_AS, 1000, bgp_path.last));  #IX
      bgp_large_community.add((NET_AS, 210, PRIV_AS));
      accept;
    } else reject;
}

filter NET_UPSTREAM_EXPORT_FILTER {
  include "/etc/bird/clearnet/custom_upstream_export_filter*.conf";
  bgp_path.delete([4292500000..4292599999]);
  bgp_large_community.delete([(NET_AS, 500..1000, *)]);
  if !INVALID_NET() && !INVALID_ASN() && !TOO_SMALL_NET() && bgp_large_community ~ [(NET_AS, 2000, *)] then accept; else reject;
}

filter NET_DOWNSTREAM_IMPORT_FILTER {
  include "/etc/bird/clearnet/custom_downstream_import_filter*.conf";
  if !RPKI_INVALID() && !INVALID_NET() && !INVALID_ASN() && !TOO_SMALL_NET() && !NET_SELF_NET_CHECK() && bgp_large_community !~ [(NET_AS, 2000, *)] then {
      bgp_large_community.add((NET_AS, 2000, bgp_path.last));
      bgp_local_pref = 2000;
      accept;
  } else reject;
}

filter NET_DOWNSTREAM_EXPORT_FILTER {
  include "/etc/bird/clearnet/custom_downstream_export_filter*.conf";
  bgp_path.delete([4292500000..4292599999]);
  if !INVALID_NET() && !INVALID_ASN() && !TOO_SMALL_NET() && bgp_large_community !~ [(NET_AS, 50, NET_AS)] then accept; else reject;
}

template bgp NET_TRANSIT {
    local as NET_AS;
    source address NET_SELF_IPv6;
    graceful restart on;

    ipv4 {
        import none; #NET_TRANSIT_UPSTREAM_IMPORT_FILTER
        export filter NET_UPSTREAM_EXPORT_FILTER;
        export limit 20 action block;
    };

    ipv6 {
        import keep filtered;
        import none; #NET_TRANSIT_UPSTREAM_IMPORT_FILTER
        export filter NET_UPSTREAM_EXPORT_FILTER;
        export limit 20 action block;
    };
}

template bgp NET_IX {
    local as NET_AS;
    source address NET_SELF_IPv6;
    graceful restart on;
    long lived graceful restart on;

    ipv4 {
        import none; #import filter NET_IX_UPSTREAM_IMPORT_FILTER;
        export filter NET_UPSTREAM_EXPORT_FILTER;
        export limit 20 action block;
        add paths;
    };

    ipv6 {
        import keep filtered;
        import filter NET_IX_UPSTREAM_IMPORT_FILTER;
        export filter NET_UPSTREAM_EXPORT_FILTER;
        export limit 20 action block;
        add paths;
    };
}

template bgp NET_CUSTOMER {
    local as NET_AS;
    source address NET_SELF_IPv6;
    graceful restart on;
    long lived graceful restart on;

    ipv4 {
        import keep filtered;
        import filter NET_DOWNSTREAM_IMPORT_FILTER;
        export filter NET_DOWNSTREAM_EXPORT_FILTER;
        import limit 20 action disable;
        add paths;
    };

    ipv6 {
        import keep filtered;
        import filter NET_DOWNSTREAM_IMPORT_FILTER;
        export filter NET_DOWNSTREAM_EXPORT_FILTER;
        import limit 20 action disable;
        add paths;
    };
}

include "/etc/bird/clearnet/peers/*.conf";
